{"version":3,"sources":["webpack:///webpack/bootstrap 3bc57ec3ab09de71c876","webpack:///./lib/matter.js","webpack:///./lib/entry.js","webpack:///./lib/firework.js","webpack:///./lib/pellet.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/record.js","webpack:///./lib/demo.js","webpack:///./lib/display.js"],"names":["f","exports","module","define","g","window","global","self","Matter","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","_dereq_","Body","Vertices","Vector","Sleeping","Render","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","create","options","defaults","id","nextId","type","label","parts","plugin","angle","vertices","fromPath","position","x","y","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isStatic","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","sprite","xScale","yScale","xOffset","yOffset","lineWidth","body","extend","_initProperties","nextGroup","isNonColliding","nextCategory","set","bounds","positionPrev","clone","anglePrev","parent","rotate","axes","update","area","mass","inertia","defaultFillStyle","choose","defaultStrokeStyle","fillStyle","strokeStyle","min","max","settings","value","property","hasOwnProperty","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","Infinity","fromVertices","centre","translate","autoHull","slice","push","concat","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","Math","abs","translation","add","rotation","point","cos","sin","dx","dy","scale","scaleX","scaleY","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","offset","properties","mult","div","Composite","Events","isModified","bodies","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","object","objects","trigger","obj","warn","addBody","addConstraint","addComposite","constraint","remove","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","indexOf","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","get","toString","move","rebase","recursive","World","Constraint","gravity","Contact","vertex","normalImpulse","tangentImpulse","index","Detector","SAT","Pair","collisions","broadphasePairs","engine","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","j","partA","k","partB","pairId","pair","previousCollision","isActive","collision","collides","collided","filterA","filterB","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","world","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","floor","column","pairKeys","keys","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","indexesToRemove","pairIndex","Query","Bodies","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","result","contains","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","contactCount","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","distance","vertexA","vertexB","prevIndex","nextIndex","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","MouseConstraint","Mouse","mouse","canvas","element","mouseConstraint","on","_triggerEvents","button","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","_nextId","_seed","_nowStartTime","Date","argsStart","args","deepClone","arguments","source","prop","constructor","Object","key","values","path","begin","end","split","val","shuffle","array","random","temp","choices","isElement","HTMLElement","isArray","prototype","isFunction","isPlainObject","isString","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","apply","Array","info","haystack","needle","map","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","chainPathBefore","base","chainPathAfter","Engine","Metrics","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","eventNames","callback","names","name","off","join","callbacks","newCallbacks","eventClone","Plugin","version","uses","used","use","before","after","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","addEventListener","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","pageXOffset","undefined","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","clientWidth","width","clientHeight","height","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","test","identifiers","isRange","isNaN","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","Runner","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_frameTimeout","setTimeout","clearTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","runner","deltaMin","deltaMax","run","time","tick","stop","start","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","decomp","chamfer","radius","quality","qualityMin","qualityMax","trapezoid","slope","roof","x1","x2","x3","verticesPath","circle","maxSides","sides","ceil","polygon","theta","PI","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","v","z","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","magnitudeSquared","db","isInternal","Composites","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","normalise","gradient","boundsA","boundsB","vector","shift","deltaX","deltaY","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","points","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","alpha","acos","sort","flag","upper","lower","pop","RenderPixi","background","wireframeBackground","hasBounds","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","style","lookAt","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","c","space","debugTimestamp","text","round","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","stroke","fill","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","corrected","normalPosX","normalPosY","bucketKeys","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","color","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","Demo","Display","Firework","Record","mainCanvas","getElementById","mainContext","clearRect","playButton","theDisplay","listenToButton","resetButton","resetFireworkArray","demoButton","demo","button1","record1","button2","record2","button3","record3","button4","record4","button5","record5","button6","record6","mutePage","audios","querySelectorAll","forEach","audio","muteMe","elem","muted","pause","Pellet","colorArray","Xcoor","Ycoor","pelletArray","colors","centerX","centerY","fireworkInnerRadius","pelletRadius","initiate","bind","buildPelletArray","animateWithLoop","clearScreen","fireworkSound","Audio","play","adjustment","startX","startY","load","numColors","p","colorValues","pellet","fade","counter","numIterations","setInterval","pelote","newAlpha","negPos","red","green","blue","clearInterval","make","display","theButton","pointColor","bangImage","bustImage","setCanvasListener","saveFirework","xPos","clientX","yPos","clientY","removeEventListener","getClickPosition","firework","addFirework","playDemo","firework1","firework2","firework3","firework4","firework5","firework6","firework7","fireworkArray","fireThemAll"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3bc57ec3ab09de71c876","/**\n* matter-js 0.13.0 by @liabru 2017-07-06\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) Liam Brummitt and contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass and density are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass is automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body.\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = _totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, body.position);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n\n            if (!body.isStatic) {\n                part.area = Vertices.area(part.vertices);\n                Body.setMass(part, body.density * part.area);\n\n                // update inertia (requires vertices to be at origin)\n                Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n                Body.setInertia(part, Vertices.inertia(part.vertices, part.mass));\n                Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n            }\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle circles\n        if (body.circleRadius) {\n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n\n        if (!body.isStatic) {\n            var total = _totalProperties(body);\n            body.area = total.area;\n            Body.setMass(body, total.mass);\n            Body.setInertia(body, total.inertia);\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n\n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    var _totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            properties.mass += part.mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre,\n                                           Vector.mult(part.position, part.mass !== Infinity ? part.mass : 1));\n        }\n\n        properties.centre = Vector.div(properties.centre,\n                                       properties.mass !== Infinity ? properties.mass : body.parts.length);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body.\n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection.\n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur.\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear.\n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model).\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance).\n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear.\n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n\n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n\n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default\n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({\n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [],\n            constraints: [],\n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag.\n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n\n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) {\n            return object.id.toString() === id.toString();\n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions,\n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Matter.Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Matter.Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: {\n                min: { x: -Infinity, y: -Infinity },\n                max: { x: Infinity, y: Infinity }\n            }\n        };\n\n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.add\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n\n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n\n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n\n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0],\n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n\n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = _getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = _regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = _getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    _bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = _createBucket(buckets, bucketId);\n                            _bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = _createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    var _regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    var _getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\n        return {\n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol,\n            endCol: endCol,\n            startRow: startRow,\n            endRow: endRow\n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    var _getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    var _createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    var _createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n\n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n\n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n\n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    var _pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({\n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n\n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n\n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n\n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > _pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n\n            if (Bounds.overlaps(bodyA.bounds, ray.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, ray.bounds)) {\n                        var collision = SAT.collides(part, ray);\n                        if (collision.collided) {\n                            collision.body = collision.bodyA = collision.bodyB = bodyA;\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA),\n                                    Vector.add(bodyA.positionImpulse,\n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n\n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD),\n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA,\n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result\n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = _overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = _overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = _overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n\n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth;\n\n        // find support points, there is always either exactly one or two\n        var verticesB = _findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = _findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n\n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n\n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    var _overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0],\n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            _projectToAxis(projectionA, verticesA, axis);\n            _projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    var _projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) {\n                max = dot;\n            } else if (dot < min) {\n                min = dot;\n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n\n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    var _findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n\n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n\n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n\n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n\n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type.\n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint,\n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint.\n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({\n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01,\n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            _triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position)\n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    var _triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n\n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n\n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        return obj instanceof HTMLElement;\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n\n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n\n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n\n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n\n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.\n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                _topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    var _topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                _topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n})();\n\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n\n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        _bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        _bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        _bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n\n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n\n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n\n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    var _bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    var _bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method updateAll\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime\n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction\n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    var _bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine.\n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`.\n     * It is incremented on every `Engine.update` by the given `delta` argument.\n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.13.0';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n\n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n\n        mouse.mousemove = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n\n        mouse.mousedown = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n\n        mouse.mouseup = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n\n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n\n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    var _getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n\n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return {\n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists.\n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.\n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop,\n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){\n            _frameTimeout = setTimeout(function() {\n                callback(Common.now());\n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n\n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified\n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n\n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n\n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n\n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n\n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent,\n                bodyB = collision.bodyB.parent;\n\n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n\n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n\n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models\n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp = (typeof window !== \"undefined\" ? window['decomp'] : typeof global !== \"undefined\" ? global['decomp'] : null);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = {\n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a trapezoid hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n\n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = {\n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n\n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = {\n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n\n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n\n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x;\n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n\n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n\n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n\n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n\n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n\n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n\n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n\n            var constraint = Common.extend(defaults, options);\n\n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n\n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n\n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n\n        return composite;\n    };\n\n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n\n            if (row > actualRows)\n                return;\n\n            // reverse row order\n            row = actualRows - row;\n\n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n\n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n\n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size,\n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n\n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, {\n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n\n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n\n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n\n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n\n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n\n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length,\n                normal = Vector.normalise({\n                    x: vertices[j].y - vertices[i].y,\n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n\n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = {\n            min: { x: 0, y: 0 },\n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n\n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n\n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n\n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x\n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n\n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n\n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments,\n            segmentsQueue, lastSegment,\n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z')\n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        _svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    var _svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle in radians between the two vectors relative to the x-axis.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(),\n        Vector.create(), Vector.create(),\n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas),\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n\n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        radius = radius || [8];\n\n        if (!radius.length)\n            radius = [radius];\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({\n                x: vertex.y - prevVertex.y,\n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({\n                x: nextVertex.y - vertex.y,\n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [],\n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) {\n            container.removeChild(container.children[0]);\n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) {\n            spriteContainer.removeChild(spriteContainer.children[0]);\n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas\n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite);\n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n\n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n\n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x),\n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/matter.js","// const requestAnimFrame = require(\"./requestAnimFrame\");\nconst Demo = require(\"./demo\");\nconst Display = require(\"./display\");\nconst Firework = require(\"./firework\");\n// const Pellet = require(\"./pellet\");\nconst Record = require(\"./record\");\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n\n  //credit for requestAnimFrame: Paul Irish\n  // window.requestAnimFrame = (function(){\n  //   return  window.requestAnimationFrame       ||\n  //           window.webkitRequestAnimationFrame ||\n  //           window.mozRequestAnimationFrame    ||\n  //           window.oRequestAnimationFrame      ||\n  //           window.msRequestAnimationFrame     ||\n  //           function( callback ){\n  //             window.setTimeout(callback, 1000 / 60);\n  //           };\n  // })();\n\n\n  console.log(\"i'm on the entry file\");\n\n  const mainCanvas = document.getElementById(\"myCanvas\");\n  mainCanvas.width = document.documentElement.clientWidth;\n  mainCanvas.height = document.documentElement.clientHeight;\n  let mainContext = mainCanvas.getContext(\"2d\");\n  mainContext.clearRect(0, 0, mainCanvas.width, mainCanvas.height);\n\n  // let firework = new Firework(mainCanvas);\n  // firework.listen();\n\n  let playButton = document.getElementById(\"play-pause\");\n  let theDisplay = new Display(mainCanvas, playButton);\n  theDisplay.listenToButton();\n\n  let resetButton = document.getElementById(\"reset\");\n  resetButton.addEventListener(\"click\", theDisplay.resetFireworkArray);\n\n  let demoButton = document.getElementById(\"demo\");\n  let demo = new Demo(mainCanvas, demoButton);\n  demo.listenToButton();\n\n\n\n  let button1 = document.getElementById(\"F1\");\n  let record1 = new Record(mainCanvas, button1,[[255, 102, 1]], theDisplay);\n  record1.listenToButton();\n\n  let button2 = document.getElementById(\"F2\");\n  let record2 = new Record(mainCanvas, button2,[[255, 255, 1]], theDisplay);\n  record2.listenToButton();\n\n  let button3 = document.getElementById(\"F3\");\n  let record3 = new Record(mainCanvas, button3,[[1, 255, 1]], theDisplay);\n  record3.listenToButton();\n\n  let button4 = document.getElementById(\"F4\");\n  let record4 = new Record(mainCanvas, button4,[[1, 102, 255]], theDisplay);\n  record4.listenToButton();\n\n  let button5 = document.getElementById(\"F5\");\n  let record5 = new Record(mainCanvas, button5,[[255, 51, 153]], theDisplay);\n  record5.listenToButton();\n\n  let button6 = document.getElementById(\"F6\");\n  let record6 = new Record(mainCanvas, button6,[[255, 1, 1], [1, 255, 1], [1, 1, 255]], theDisplay);\n  record6.listenToButton();\n\n\n\n  // let muteButton = document.getElementById('mute');\n  // muteButton.onclick = mutePage();\n\n  function mutePage() {\n    let audios = document.querySelectorAll(\"button\");\n    [].forEach.call(audios, function(audio) { muteMe(audio); });\n  }\n\n  function muteMe(elem) {\n    elem.muted = true;\n    elem.pause();\n  }\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/entry.js","const Pellet = require(\"./pellet\");\n\nclass Firework {\n  constructor(canvas, colorArray, Xcoor, Ycoor) {\n    //prob should change this to a brand new canvas by passing in the 'canvasID' instead of the canvas itself\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n    this.context.globalCompositeOperation = 'source-over';\n\n    this.Xcoor = Xcoor;\n    this.Ycoor = Ycoor;\n\n    this.pelletArray = [];\n    this.colors = colorArray || [[255, 1, 1], [1, 255, 1], [1, 1, 255]];\n    this.centerX = this.canvas.width/2;\n    this.centerY = this.canvas.height/2;\n    this.fireworkInnerRadius = 5;\n    this.pelletRadius = 3;\n\n    this.initiate = this.initiate.bind(this);\n    this.buildPelletArray = this.buildPelletArray.bind(this);\n    this.animateWithLoop = this.animateWithLoop.bind(this);\n    this.clearScreen = this.clearScreen.bind(this);\n\n  }\n\n\n  initiate() {\n    let fireworkSound = new Audio(\"./lib/fireworkSound.mp3\");\n    fireworkSound.play();\n\n    let viewWidth = document.documentElement.clientWidth;\n    let viewHeight = document.documentElement.clientHeight;\n    console.log(\"viewWidth:\", viewWidth);\n    console.log(\"viewHeigh:\", viewHeight);\n\n    let adjustment = 0;\n    this.buildPelletArray(this.Xcoor - adjustment, this.Ycoor + adjustment);\n    this.animateWithLoop();\n  }\n\n\n  buildPelletArray(startX, startY) {\n\n    let load = this.pelletArray.length;\n    let numColors = this.colors.length;\n    let alpha = 1.0;\n\n    for(let i = 0; i < 200; i++) {\n      //consider making both x and y change with random numbers instead of the same random number\n      let p = Math.random();\n      let x = startX + this.fireworkInnerRadius * Math.cos(2 * Math.PI * p);\n      let y = startY + this.fireworkInnerRadius * Math.sin(2 * Math.PI * p);\n      let colorValues = this.colors[Math.floor(i % numColors)];\n\n      let pellet = new Pellet(x, y, this.pelletRadius, colorValues[0], colorValues[1], colorValues[2], alpha);\n      this.pelletArray.push(pellet);\n    }\n\n  }\n\n\n  animateWithLoop() {\n    console.log(\"inside animate with Loop\");\n    this.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n\n    let x = this;\n    let fade = 0;\n    let counter = 0;\n    let numIterations = 300;\n    let z = setInterval(function(){\n\n        x.context.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n        x.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n\n        for(let i = 0; i < x.pelletArray.length; i++) {\n          let pelote = x.pelletArray[i];\n          let newAlpha = pelote.alpha - fade;\n          let negPos = [-1, 1][Math.floor(Math.random()) * 2];\n\n          x.context.beginPath();\n          x.context.arc((pelote.x + (counter * 3 * [-1, 1][Math.floor(Math.random()) * 2] * Math.random())), (pelote.y + (counter * 2 * [-1, 1][Math.floor(Math.random()) * 2] * Math.random())), pelote.pelletRadius, 0, 2 * Math.PI, false);\n          x.context.fillStyle = `rgba(${pelote.red}, ${pelote.green}, ${pelote.blue}, ${newAlpha})`;\n          x.context.fill();\n\n        }\n\n        counter++;\n        if (fade < 1){\n          fade += (0.005);\n        }\n\n        if(counter === numIterations) {\n            clearInterval(z);\n        }\n    }, 20);\n\n    // this.clearScreen();\n    // requestAnimationFrame(this.animateWithLoop);\n  }\n\n  clearScreen() {\n    this.context.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n    this.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n  }\n\n}\n\n\n\n\nmodule.exports = Firework;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/firework.js","const Matter = require(\"./matter\");\n\nclass Pellet {\n  constructor (x, y, radius, red, green, blue, alpha) {\n\n    this.x = x || null;\n    this.y = y || null;\n    this.pelletRadius = radius || null;\n    this.red = red || null;\n    this.green = green || null;\n    this.blue = blue || null;\n    this.alpha = alpha || null;\n\n    this.make = this.make.bind(this);\n\n  }\n\n  make(context) {\n    console.log(\"inside pellet's make method\");\n\n    context.globalCompositeOperation = 'source-over';\n    context.beginPath();\n    context.arc(this.x, this.y, this.pelletRadius, 0, 2 * Math.PI, false);\n    context.fillStyle = `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n    context.fill();\n    // console.log(\"inside make\", this.x);\n    // let stage = new createjs.Stage(\"myCanvas\");\n    // let pelote = new createjs.Shape();\n    // pelote.graphics.beginFill(this.color).drawCircle(0, 0, this.pelletRadius);\n    // pelote.x = this.x;\n    // pelote.y = this.y;\n    // stage.addChild(pelote);\n    // stage.update();\n\n    // createjs.Tween.get(pelote, { loop: false })\n    //   .to({ y: 400 }, 2000, createjs.Ease.getPowInOut(10))\n    //   .to({ alpha: 0, x: 175 }, 1000, createjs.Ease.getPowInOut(2))\n    //   .to({ alpha: 0, x: 225 }, 200)\n    //   .to({ alpha: 1, x: 200 }, 1000, createjs.Ease.getPowInOut(2))\n    //   .to({ y: 100 }, 800, createjs.Ease.getPowInOut(2));\n    //\n    // createjs.Ticker.setFPS(60);\n    // createjs.Ticker.addEventListener(\"tick\", stage);\n  }\n\n\n}\n\n\n\n// class Pellet {\n//\n//   constructor (ctx, posObject, targetObject, velObject, color, usePhysics) {\n//     // this.ctx = ctx;\n//     this.color = color;\n//\n//     this.gravity = 0.05;\n//     this.alpha = 1;\n//     this.easing = Math.random() * 0.05;\n//     this.fade = Math.random() * 0.2;\n//\n//\n//     this.pos = {\n//       x: posObject.x || 0,\n//       y: posObject.y || 0\n//     };\n//\n//     this.target = {\n//       x: this.targetObject.x || 0,\n//       y: this.targetObject.y || 0\n//     };\n//\n//     this.velocity = {\n//       x: this.velObject.x || 0,\n//       y: this.velObject.y || 0\n//     };\n//\n//     this.usePhysics = usePhysics || false;\n//\n//     this.clearScreen = this.clearScreen.bind(this);\n//   }\n//\n//   // to get full height/width:\n//   // document.documentElement.clientWidth\n//   // document.documentElement.clientHeight\n//   // ...these are built into window\n//\n//   clearScreen() {\n//     this.ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n//     this.ctx.fillRect(0, 0, 1000, 700);\n//   }\n//\n// }\n\nmodule.exports = Pellet;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/pellet.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 4\n// module chunks = 0","const Firework = require(\"./firework\");\nconst Display = require(\"./display\");\n\nclass Record {\n  constructor (canvas, button, colorArray, display) {\n\n    this.theButton = button;\n    this.display = display;\n\n    this.colorArray = colorArray;\n    this.pointColor = `rgb(${colorArray[0][0]}, ${colorArray[0][1]}, ${colorArray[0][2]})`\n\n    this.mainCanvas = canvas;\n    this.mainContext = this.mainCanvas.getContext(\"2d\");\n    this.mainContext.globalCompositeOperation = 'source-over';\n\n    // this.bangCanvas = document.getElementById(\"myCanvas\");\n    // this.bangCanvas.width = 2500;\n    // this.bangCanvas.height = 2500;\n    // this.bangContext = this.bangCanvas.getContext(\"2d\");\n    // this.bangContext.globalCompositeOperation = 'source-over';\n\n    this.bangImage = new Image();\n    this.bangImage.src = \"./images/bang.png\";\n    this.bustImage = new Image();\n    this.bustImage.src = \"./images/bust.png\";\n\n    this.setCanvasListener = this.setCanvasListener.bind(this);\n    this.saveFirework = this.saveFirework.bind(this);\n    this.clearScreen = this.clearScreen.bind(this);\n  }\n\n  listenToButton() {\n    console.log(\"setting a listener on the button\");\n    this.theButton.addEventListener(\"click\", this.setCanvasListener);\n  }\n\n  setCanvasListener() {\n    console.log(\"setting a listener on the mainCanvas\");\n    this.mainCanvas.addEventListener(\"click\", this.saveFirework, false);\n  }\n\n  saveFirework(event) {\n    // this.clearScreen();\n    let xPos = event.clientX;\n    let yPos = event.clientY;\n    console.log(xPos);\n    console.log(yPos);\n\n    // this.clearScreen();\n    this.mainContext.drawImage(this.bangImage, (xPos - 0), (yPos + 0), 20, 20);\n    // this.clearScreen();\n\n    this.mainCanvas.removeEventListener(\"click\", this.getClickPosition, false);\n    let firework = new Firework(this.mainCanvas, this.colorArray, xPos, yPos);\n    this.display.addFirework(firework);\n\n  }\n\n\n\n  clearScreen() {\n    this.mainContext.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n    this.mainContext.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n  }\n\n\n}\n\nmodule.exports = Record;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/record.js","const Firework = require(\"./firework\");\n\nclass Demo {\n  constructor(canvas, button) {\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n    this.context.globalCompositeOperation = 'source-over';\n\n    this.demoButton = button;\n\n    this.playDemo = this.playDemo.bind(this);\n  }\n\n  listenToButton() {\n    console.log(\"setting a listener on the demo button\");\n    this.demoButton.addEventListener(\"click\", this.playDemo);\n  }\n\n  playDemo() {\n    console.log(\"inside playDemo\");\n\n    this.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n\n\n    let firework1 = new Firework(this.canvas, null, 103, 149);\n    firework1.initiate();\n\n    let firework2 = new Firework(this.canvas, [[255, 102, 1]], 721, 119);\n    firework2.initiate();\n\n    let firework3 = new Firework(this.canvas, null, 248, 395);\n    firework3.initiate();\n\n    let firework4 = new Firework(this.canvas, [[1, 255, 1]], 803, 293);\n    firework4.initiate();\n\n    let firework5 = new Firework(this.canvas, [[255, 102, 1]], 332, 467);\n    firework5.initiate();\n\n    let firework6 = new Firework(this.canvas, [[255, 102, 1]], 646, 556);\n    firework6.initiate();\n\n    let firework7 = new Firework(this.canvas, null, 932, 494);\n    firework7.initiate();\n\n    this.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n\n\n  }\n\n\n}\n\nmodule.exports = Demo;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/demo.js","const Firework = require(\"./firework\");\n\nclass Display {\n  constructor(canvas, playButton) {\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n    this.context.globalCompositeOperation = 'source-over';\n\n    \n    this.playButton = playButton;\n    this.fireworkArray = [];\n\n    this.addFirework = this.addFirework.bind(this);\n    this.fireThemAll = this.fireThemAll.bind(this);\n    this.resetFireworkArray = this.resetFireworkArray.bind(this);\n  }\n\n\n  listenToButton() {\n    this.playButton.addEventListener(\"click\", this.fireThemAll);\n  }\n\n\n  addFirework(firework) {\n    this.fireworkArray.push(firework);\n  }\n\n\n  fireThemAll() {\n\n    for (let i = 0; i < this.fireworkArray.length; i++) {\n      this.fireworkArray[i].initiate();\n    }\n\n  }\n\n\n  resetFireworkArray() {\n    this.fireworkArray = [];\n  }\n\n\n}\n\nmodule.exports = Display;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/display.js"],"sourceRoot":""}