{"version":3,"sources":["webpack:///webpack/bootstrap 70134421268cfab629f4","webpack:///./lib/entry.js","webpack:///./lib/firework.js","webpack:///./lib/pellet.js","webpack:///./lib/matter.js","webpack:///(webpack)/buildin/global.js"],"names":["Firework","require","Matter","document","addEventListener","window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","console","log","canvasID","mainCanvas","getElementById","width","documentElement","clientWidth","height","clientHeight","firework","listen","Engine","Render","World","Bodies","engine","create","render","element","body","boxA","rectangle","boxB","ground","isStatic","add","world","run","Pellet","canvas","context","getContext","bangImage","Image","src","bustImage","pelletArray","colors","centerX","centerY","fireworkInnerRadius","pelletRadius","bind","getClickPosition","initiate","buildPelletArray","animateWithLoop","event","xPos","clientX","yPos","clientY","x","y","xCoor","yCoor","fillStyle","clearRect","drawImage","load","length","numColors","i","p","Math","random","cos","PI","sin","pellet","floor","push","z","increment","pelote","beginPath","arc","color","fill","module","exports","radius","make","f","define","g","global","self","e","t","n","r","s","o","u","a","Error","code","l","call","_dereq_","Body","Vertices","Vector","Sleeping","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","options","defaults","id","nextId","type","label","parts","plugin","angle","vertices","fromPath","position","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","visible","opacity","sprite","xScale","yScale","xOffset","yOffset","lineWidth","extend","_initProperties","nextGroup","isNonColliding","nextCategory","set","bounds","positionPrev","clone","anglePrev","parent","rotate","axes","update","area","mass","inertia","defaultFillStyle","choose","defaultStrokeStyle","strokeStyle","min","max","settings","value","property","hasOwnProperty","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","Infinity","fromVertices","centre","translate","autoHull","slice","concat","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","abs","translation","rotation","point","dx","dy","scale","scaleX","scaleY","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","offset","properties","mult","div","Composite","Events","isModified","bodies","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","object","objects","trigger","obj","warn","addBody","addConstraint","addComposite","constraint","remove","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","indexOf","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","get","toString","move","rebase","recursive","Constraint","gravity","Contact","vertex","normalImpulse","tangentImpulse","index","Detector","SAT","Pair","collisions","broadphasePairs","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","j","partA","k","partB","pairId","pair","previousCollision","isActive","collision","collides","collided","filterA","filterB","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","column","pairKeys","keys","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","indexesToRemove","pairIndex","Query","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","outside","result","contains","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","contactCount","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","distance","vertexA","vertexB","prevIndex","nextIndex","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","MouseConstraint","Mouse","mouse","mouseConstraint","on","_triggerEvents","button","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","_nextId","_seed","_nowStartTime","Date","argsStart","args","deepClone","arguments","source","prop","constructor","Object","key","values","path","begin","end","split","val","shuffle","array","temp","choices","isElement","HTMLElement","isArray","prototype","isFunction","isPlainObject","isString","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","apply","Array","info","haystack","needle","map","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","chainPathBefore","base","chainPathAfter","Metrics","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","eventNames","names","name","off","join","callbacks","newCallbacks","eventClone","Plugin","version","uses","used","use","before","after","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","parentNode","scrollX","pageXOffset","undefined","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","test","identifiers","isRange","isNaN","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","Runner","_requestAnimationFrame","_cancelAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_frameTimeout","clearTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","runner","deltaMin","deltaMax","time","tick","stop","start","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","decomp","chamfer","quality","qualityMin","qualityMax","trapezoid","slope","roof","x1","x2","x3","verticesPath","circle","maxSides","sides","ceil","polygon","theta","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","v","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","magnitudeSquared","db","isInternal","Composites","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","normalise","gradient","boundsA","boundsB","vector","shift","deltaX","deltaY","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","points","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","alpha","acos","sort","flag","upper","lower","pop","RenderPixi","background","wireframeBackground","hasBounds","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","style","lookAt","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","c","space","debugTimestamp","text","round","debugString","font","fillText","closePath","moveTo","coils","lineTo","stroke","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","rect","corrected","normalPosX","normalPosY","bucketKeys","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","cssBackground","backgroundSize","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 70134421268cfab629f4","// const requestAnimFrame = require(\"./requestAnimFrame\");\n// const Demo = require(\"./demo\");\n// const Display = require(\"./display\");\nconst Firework = require(\"./firework\");\n// const Pellet = require(\"./pellet\");\nconst Matter = require(\"./matter\");\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n\n  //credit for requestAnimFrame: Paul Irish\n  window.requestAnimFrame = (function(){\n    return  window.requestAnimationFrame       ||\n            window.webkitRequestAnimationFrame ||\n            window.mozRequestAnimationFrame    ||\n            window.oRequestAnimationFrame      ||\n            window.msRequestAnimationFrame     ||\n            function( callback ){\n              window.setTimeout(callback, 1000 / 60);\n            };\n  })();\n\n\n  console.log(\"i'm on the entry file\");\n\n  const canvasID = \"myCanvas\";\n\n  const mainCanvas = document.getElementById(canvasID);\n  mainCanvas.width = document.documentElement.clientWidth;\n  mainCanvas.height = document.documentElement.clientHeight;\n\n  let firework = new Firework(mainCanvas);\n  firework.listen();\n\n\n  // module aliases\n  let Engine = Matter.Engine;\n  let Render = Matter.Render;\n  let World = Matter.World;\n  let Bodies = Matter.Bodies;\n\n// create an engine\nvar engine = Engine.create();\n\n// create a renderer\nvar render = Render.create({\n    element: document.body,\n    engine: engine\n});\n\n// create two boxes and a ground\nvar boxA = Bodies.rectangle(400, 200, 80, 80);\nvar boxB = Bodies.rectangle(450, 50, 80, 80);\nvar ground = Bodies.rectangle(400, 610, 810, 60, { isStatic: true });\n\n// add all of the bodies to the world\nWorld.add(engine.world, [boxA, boxB, ground]);\n\n// run the engine\nEngine.run(engine);\n\n// run the renderer\nRender.run(render);\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/entry.js","const Pellet = require(\"./pellet\");\nconst Matter = require(\"./matter\");\n\n\nclass Firework {\n  constructor(canvas) {\n  // constructor(ctx, pos, target, vel, color, usePhysics) {\n    // this.ctx = ctx;\n\n    this.canvas = canvas;\n    this.context = canvas.getContext(\"2d\");\n    this.bangImage = new Image();\n    this.bangImage.src = \"./images/bang.png\";\n    this.bustImage = new Image();\n    this.bustImage.src = \"./images/bust.png\";\n\n    // this.mainCanvas = null;\n    // this.mainContext = null;\n    // this.fireworkCanvas = null;\n    // this.fireworkContext = null;\n    // this.screenWidth = 0;\n    // this.screenHeight = 0;\n\n    this.pelletArray = [];\n    this.colors = [\"orange\", \"red\", \"white\"];\n    this.centerX = this.canvas.width/2;\n    this.centerY = this.canvas.height/2;\n    this.fireworkInnerRadius = 100;\n    this.pelletRadius = 5;\n\n\n    this.listen = this.listen.bind(this);\n    this.getClickPosition = this.getClickPosition.bind(this);\n    this.initiate = this.initiate.bind(this);\n    // this.definePellet = this.definePellet.bind(this);\n    this.buildPelletArray = this.buildPelletArray.bind(this);\n    this.animateWithLoop = this.animateWithLoop.bind(this);\n\n  }\n\n  listen() {\n    console.log(\"I'm in the listen method of firework!\");\n    this.canvas.addEventListener(\"click\", this.getClickPosition, false);\n  }\n\n  getClickPosition(event) {\n    //this.context.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n    //this.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight)\n    let xPos = event.clientX;\n    let yPos = event.clientY;\n    this.initiate(xPos, yPos);\n    // console.log(xPos);\n    // console.log(yPos);\n    //this.context.drawImage(this.bangImage, (xPos - 20), (yPos + 20), 20, 20);\n    return {x: xPos, y: yPos};\n  }\n\n  initiate(xCoor, yCoor) {\n    this.context.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n    this.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight)\n\n    // window.requestAnimFrame(this.initiate);\n\n    this.context.drawImage(this.bangImage, (xCoor - 20), (yCoor + 20), 20, 20);\n\n    this.buildPelletArray();\n\n    //loop through an animation (loop has 3 parts: 1) clears 2) draws 3)requestAnimationFrame)\n    this.animateWithLoop();\n  }\n\n\n  buildPelletArray() {\n\n    let load = this.pelletArray.length;\n    let numColors = this.colors.length;\n\n    for(let i = 0; i < 200; i++) {\n      let p = Math.random();\n      let x = this.centerX + this.fireworkInnerRadius * Math.cos(2 * Math.PI * p);\n      let y = this.centerY + this.fireworkInnerRadius * Math.sin(2 * Math.PI * p);\n\n      //creates new pellet\n      let pellet = new Pellet(x, y, this.pelletRadius, this.colors[Math.floor(i % numColors)]);\n      // let reach = this.fireworkInnerRadius + 20 + Math.random() * 80;\n      // pellet.innerX = x;\n      // pellet.outerX = this.centerX + reach * Math.cos(2 * Math.PI * p);\n      // pellet.innerY = y;\n      // pellet.outerY = this.centerY + reach * Math.sin(2 * Math.PI * p);\n\n      this.pelletArray.push(pellet);\n    }\n\n    // console.log(this.pelletArray);\n  }\n\n\n  animateWithLoop() {\n    // this.context.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n    // this.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n\n    for (let z = 0; z < 10; z++) {\n      console.log(\"outer loop\");\n      let increment = 0;\n      this.context.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n      this.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n\n      for(let i = 0; i < this.pelletArray.length; i++) {\n        // this.pelletArray[i].make(this.context);\n        increment += i;\n        let pelote = this.pelletArray[i];\n        this.context.beginPath();\n        this.context.arc((pelote.x + increment), pelote.y, pelote.pelletRadius, 0, 2 * Math.PI, false);\n        this.context.fillStyle = pelote.color;\n        this.context.fill();\n      }\n\n    }\n\n    // requestAnimationFrame(this.animateWithLoop);\n  }\n\n\n    //Tween the pelletArray with GSAP TweenLite library\n    // for(let i = 0; i < pelletArray.length; i++) {\n    //   tweenCircle(pelletArray[i]);\n    // }\n    //\n    // function tweenCircle(c) {\n    //   TweenLite.to(c, 0.5+Math.random(), {x: c.outerX, y: c.outerY, ease: Cubic.easeInOut, onComplete: function() {\n    //     TweenLite.to(c, 0.5+Math.random(), {x: c.innerX, y: c.innerY, ease: Cubic.easeInOut, onComplete: function() {\n    //       tweenCircle(c);\n    //     }\n    //   })\n    //   }});\n    // }\n\n  }\n\n\n\n\nmodule.exports = Firework;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/firework.js","const Matter = require(\"./matter\");\n\nclass Pellet {\n  constructor (x, y, radius, color) {\n\n    this.x = x || null;\n    this.y = y || null;\n    this.pelletRadius = radius || null;\n    this.color = color || null;\n\n    this.make = this.make.bind(this);\n\n  }\n\n  make(context) {\n    // if (!this.x || !this.y || !this.pelletRadius || !this.color) {\n    //     console.error('pellet parameter error');\n    //     return;\n    // }\n\n    context.beginPath();\n    context.arc(this.x, this.y, this.pelletRadius, 0, 2 * Math.PI, false);\n    context.fillStyle = this.color;\n    context.fill();\n    // console.log(\"inside make\", this.x);\n    // let stage = new createjs.Stage(\"myCanvas\");\n    // let pelote = new createjs.Shape();\n    // pelote.graphics.beginFill(this.color).drawCircle(0, 0, this.pelletRadius);\n    // pelote.x = this.x;\n    // pelote.y = this.y;\n    // stage.addChild(pelote);\n    // stage.update();\n\n    // createjs.Tween.get(pelote, { loop: false })\n    //   .to({ y: 400 }, 2000, createjs.Ease.getPowInOut(10))\n    //   .to({ alpha: 0, x: 175 }, 1000, createjs.Ease.getPowInOut(2))\n    //   .to({ alpha: 0, x: 225 }, 200)\n    //   .to({ alpha: 1, x: 200 }, 1000, createjs.Ease.getPowInOut(2))\n    //   .to({ y: 100 }, 800, createjs.Ease.getPowInOut(2));\n    //\n    // createjs.Ticker.setFPS(60);\n    // createjs.Ticker.addEventListener(\"tick\", stage);\n  }\n\n\n}\n\n\n\n// class Pellet {\n//\n//   constructor (ctx, posObject, targetObject, velObject, color, usePhysics) {\n//     // this.ctx = ctx;\n//     this.color = color;\n//\n//     this.gravity = 0.05;\n//     this.alpha = 1;\n//     this.easing = Math.random() * 0.05;\n//     this.fade = Math.random() * 0.2;\n//\n//\n//     this.pos = {\n//       x: posObject.x || 0,\n//       y: posObject.y || 0\n//     };\n//\n//     this.target = {\n//       x: this.targetObject.x || 0,\n//       y: this.targetObject.y || 0\n//     };\n//\n//     this.velocity = {\n//       x: this.velObject.x || 0,\n//       y: this.velObject.y || 0\n//     };\n//\n//     this.usePhysics = usePhysics || false;\n//\n//     this.clearScreen = this.clearScreen.bind(this);\n//   }\n//\n//   // to get full height/width:\n//   // document.documentElement.clientWidth\n//   // document.documentElement.clientHeight\n//   // ...these are built into window\n//\n//   clearScreen() {\n//     this.ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n//     this.ctx.fillRect(0, 0, 1000, 700);\n//   }\n//\n// }\n\nmodule.exports = Pellet;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/pellet.js","/**\n* matter-js 0.13.0 by @liabru 2017-07-06\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) Liam Brummitt and contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass and density are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass is automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body.\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = _totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, body.position);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n\n            if (!body.isStatic) {\n                part.area = Vertices.area(part.vertices);\n                Body.setMass(part, body.density * part.area);\n\n                // update inertia (requires vertices to be at origin)\n                Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n                Body.setInertia(part, Vertices.inertia(part.vertices, part.mass));\n                Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n            }\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle circles\n        if (body.circleRadius) {\n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n\n        if (!body.isStatic) {\n            var total = _totalProperties(body);\n            body.area = total.area;\n            Body.setMass(body, total.mass);\n            Body.setInertia(body, total.inertia);\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n\n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    var _totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            properties.mass += part.mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre,\n                                           Vector.mult(part.position, part.mass !== Infinity ? part.mass : 1));\n        }\n\n        properties.centre = Vector.div(properties.centre,\n                                       properties.mass !== Infinity ? properties.mass : body.parts.length);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body.\n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection.\n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur.\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear.\n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model).\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance).\n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear.\n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n\n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n\n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default\n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({\n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [],\n            constraints: [],\n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag.\n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n\n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) {\n            return object.id.toString() === id.toString();\n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions,\n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Matter.Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Matter.Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: {\n                min: { x: -Infinity, y: -Infinity },\n                max: { x: Infinity, y: Infinity }\n            }\n        };\n\n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.add\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n\n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n\n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n\n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0],\n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n\n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = _getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = _regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = _getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    _bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = _createBucket(buckets, bucketId);\n                            _bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = _createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    var _regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    var _getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\n        return {\n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol,\n            endCol: endCol,\n            startRow: startRow,\n            endRow: endRow\n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    var _getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    var _createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    var _createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n\n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n\n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n\n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    var _pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({\n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n\n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n\n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n\n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > _pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n\n            if (Bounds.overlaps(bodyA.bounds, ray.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, ray.bounds)) {\n                        var collision = SAT.collides(part, ray);\n                        if (collision.collided) {\n                            collision.body = collision.bodyA = collision.bodyB = bodyA;\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA),\n                                    Vector.add(bodyA.positionImpulse,\n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n\n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD),\n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA,\n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result\n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = _overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = _overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = _overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n\n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth;\n\n        // find support points, there is always either exactly one or two\n        var verticesB = _findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = _findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n\n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n\n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    var _overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0],\n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            _projectToAxis(projectionA, verticesA, axis);\n            _projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    var _projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) {\n                max = dot;\n            } else if (dot < min) {\n                min = dot;\n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n\n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    var _findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n\n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n\n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n\n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n\n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type.\n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint,\n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint.\n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({\n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01,\n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            _triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position)\n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    var _triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n\n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n\n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        return obj instanceof HTMLElement;\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n\n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n\n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n\n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n\n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.\n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                _topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    var _topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                _topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n})();\n\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n\n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        _bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        _bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        _bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n\n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n\n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n\n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    var _bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    var _bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method updateAll\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime\n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction\n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    var _bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine.\n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`.\n     * It is incremented on every `Engine.update` by the given `delta` argument.\n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.13.0';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n\n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n\n        mouse.mousemove = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n\n        mouse.mousedown = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n\n        mouse.mouseup = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n\n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n\n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    var _getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n\n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return {\n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists.\n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.\n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop,\n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){\n            _frameTimeout = setTimeout(function() {\n                callback(Common.now());\n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n\n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified\n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n\n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n\n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n\n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n\n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent,\n                bodyB = collision.bodyB.parent;\n\n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n\n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n\n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models\n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp = (typeof window !== \"undefined\" ? window['decomp'] : typeof global !== \"undefined\" ? global['decomp'] : null);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = {\n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a trapezoid hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n\n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = {\n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n\n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = {\n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n\n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n\n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x;\n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n\n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n\n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n\n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n\n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n\n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n\n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n\n            var constraint = Common.extend(defaults, options);\n\n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n\n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n\n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n\n        return composite;\n    };\n\n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n\n            if (row > actualRows)\n                return;\n\n            // reverse row order\n            row = actualRows - row;\n\n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n\n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n\n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size,\n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n\n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, {\n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n\n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n\n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n\n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n\n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n\n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length,\n                normal = Vector.normalise({\n                    x: vertices[j].y - vertices[i].y,\n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n\n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = {\n            min: { x: 0, y: 0 },\n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n\n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n\n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n\n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x\n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n\n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n\n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments,\n            segmentsQueue, lastSegment,\n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z')\n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        _svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    var _svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle in radians between the two vectors relative to the x-axis.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(),\n        Vector.create(), Vector.create(),\n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas),\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n\n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        radius = radius || [8];\n\n        if (!radius.length)\n            radius = [radius];\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({\n                x: vertex.y - prevVertex.y,\n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({\n                x: nextVertex.y - vertex.y,\n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [],\n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) {\n            container.removeChild(container.children[0]);\n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) {\n            spriteContainer.removeChild(spriteContainer.children[0]);\n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas\n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite);\n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n\n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n\n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x),\n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/matter.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}