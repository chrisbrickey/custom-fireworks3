{"version":3,"sources":["webpack:///webpack/bootstrap 2b40c1f8999ef4aeeff4","webpack:///./lib/firework.js","webpack:///./lib/display.js","webpack:///./lib/entry.js","webpack:///./lib/demo.js","webpack:///./lib/pellet.js","webpack:///./lib/matter.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/record.js"],"names":["Pellet","require","Firework","colorArray","Xcoor","Ycoor","pelletArray","colors","fireworkInnerRadius","pelletRadius","initiate","bind","buildPelletArray","animateWithLoop","fireworkSound","Audio","play","adjustment","startX","startY","load","length","numColors","alpha","i","p","Math","random","x","cos","PI","y","sin","colorValues","floor","pellet","push","console","log","viewWidth","document","documentElement","clientWidth","viewHeight","clientHeight","fireCanvas","getElementById","fireContext","getContext","globalCompositeOperation","clearRect","width","height","fade","magnitude","counter","numIterations","z","setInterval","fillStyle","pelote","newAlpha","theta","changeX","changeY","beginPath","arc","red","green","blue","fill","clearInterval","module","exports","Display","context","playButton","fireworkArray","addFirework","fireThemAll","resetFireworkArray","addEventListener","firework","Demo","Record","mainCanvas","mainContext","theDisplay","listenToButton","resetButton","demoButton","demo","button1","record1","button2","record2","button3","record3","button4","record4","button5","record5","button6","record6","updateCanvasContext","window","mutePage","audios","querySelectorAll","forEach","call","audio","muteMe","elem","muted","pause","button","playDemo","demoCanvas","demoContext","firework1","firework2","firework3","firework4","firework5","firework6","firework7","Matter","radius","make","f","define","g","global","self","e","t","n","r","s","o","u","a","Error","code","l","_dereq_","Body","Vertices","Vector","Sleeping","Render","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","create","options","defaults","id","nextId","type","label","parts","plugin","angle","vertices","fromPath","position","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isStatic","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","sprite","xScale","yScale","xOffset","yOffset","lineWidth","body","extend","_initProperties","nextGroup","isNonColliding","nextCategory","set","bounds","positionPrev","clone","anglePrev","parent","rotate","axes","update","area","mass","inertia","defaultFillStyle","choose","defaultStrokeStyle","strokeStyle","min","max","settings","value","property","hasOwnProperty","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","Infinity","fromVertices","centre","translate","autoHull","slice","concat","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","abs","translation","add","rotation","point","dx","dy","scale","scaleX","scaleY","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","offset","properties","mult","div","Composite","Events","isModified","bodies","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","object","objects","trigger","obj","warn","addBody","addConstraint","addComposite","constraint","remove","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","indexOf","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","get","toString","move","rebase","recursive","World","Constraint","gravity","Contact","vertex","normalImpulse","tangentImpulse","index","Detector","SAT","Pair","collisions","broadphasePairs","engine","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","j","partA","k","partB","pairId","pair","previousCollision","isActive","collision","collides","collided","filterA","filterB","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","world","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","column","pairKeys","keys","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","indexesToRemove","pairIndex","Query","Bodies","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","result","contains","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","contactCount","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","distance","vertexA","vertexB","prevIndex","nextIndex","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","MouseConstraint","Mouse","mouse","canvas","element","mouseConstraint","on","_triggerEvents","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","_nextId","_seed","_nowStartTime","Date","argsStart","args","deepClone","arguments","source","prop","constructor","Object","key","values","path","begin","end","split","val","shuffle","array","temp","choices","isElement","HTMLElement","isArray","prototype","isFunction","isPlainObject","isString","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","apply","Array","info","haystack","needle","map","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","chainPathBefore","base","chainPathAfter","Engine","Metrics","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","eventNames","callback","names","name","off","join","callbacks","newCallbacks","eventClone","Plugin","version","uses","used","use","before","after","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","parentNode","scrollX","pageXOffset","undefined","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","test","identifiers","isRange","isNaN","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","Runner","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_frameTimeout","setTimeout","clearTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","runner","deltaMin","deltaMax","run","time","tick","stop","start","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","decomp","chamfer","quality","qualityMin","qualityMax","trapezoid","slope","roof","x1","x2","x3","verticesPath","circle","maxSides","sides","ceil","polygon","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","v","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","magnitudeSquared","db","isInternal","Composites","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","normalise","gradient","boundsA","boundsB","vector","shift","deltaX","deltaY","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","points","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","acos","sort","flag","upper","lower","pop","RenderPixi","background","wireframeBackground","hasBounds","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","style","lookAt","padding","center","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","c","space","debugTimestamp","text","round","debugString","font","fillText","closePath","moveTo","coils","lineTo","stroke","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","rect","corrected","normalPosX","normalPosY","bucketKeys","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","color","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","display","recordCanvas","recordContext","theButton","pointColor","bangImage","bustImage","setCanvasListener","saveFirework","removeEventListener","xPos","clientX","yPos","clientY"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2b40c1f8999ef4aeeff4","const Pellet = require(\"./pellet\");\n\nclass Firework {\n  constructor(colorArray, Xcoor, Ycoor) {\n    this.Xcoor = Xcoor;\n    this.Ycoor = Ycoor;\n\n    this.pelletArray = [];\n    this.colors = colorArray || [[211, 211, 211], [255, 51, 153], [255, 255, 1]];\n    this.fireworkInnerRadius = 5;\n    this.pelletRadius = 3;\n\n    this.initiate = this.initiate.bind(this);\n    this.buildPelletArray = this.buildPelletArray.bind(this);\n    this.animateWithLoop = this.animateWithLoop.bind(this);\n  }\n\n\n  initiate() {\n    let fireworkSound = new Audio(\"./lib/fireworkSound.mp3\");\n    fireworkSound.play();\n\n    let adjustment = 0;\n    this.buildPelletArray(this.Xcoor - adjustment, this.Ycoor + adjustment);\n    this.animateWithLoop();\n  }\n\n\n  buildPelletArray(startX, startY) {\n\n    let load = this.pelletArray.length;\n    let numColors = this.colors.length;\n    let alpha = 1.0;\n\n    for(let i = 0; i < 200; i++) {\n      //consider making both x and y change with random numbers instead of the same random number\n      let p = Math.random();\n      let x = startX + this.fireworkInnerRadius * Math.cos(2 * Math.PI * p);\n      let y = startY + this.fireworkInnerRadius * Math.sin(2 * Math.PI * p);\n      let colorValues = this.colors[Math.floor(i % numColors)];\n\n      let pellet = new Pellet(x, y, this.pelletRadius, colorValues[0], colorValues[1], colorValues[2], alpha);\n      this.pelletArray.push(pellet);\n    }\n\n  }\n\n  animateWithLoop() {\n    console.log(\"inside animate with Loop\");\n\n    let viewWidth = document.documentElement.clientWidth;\n    let viewHeight = document.documentElement.clientHeight;\n    console.log(\"viewWidth:\", viewWidth);\n    console.log(\"viewHeigh:\", viewHeight);\n\n    let fireCanvas = document.getElementById(\"myCanvas\");\n    let fireContext = fireCanvas.getContext(\"2d\");\n    fireContext.globalCompositeOperation = 'source-over';\n    fireContext.clearRect(0, 0, fireCanvas.width, fireCanvas.height);\n\n    let x = this;\n    let fade = 0;\n    let magnitude = 1;\n    let counter = 0;\n    let numIterations = 300;\n\n\n    let z = setInterval(function(){\n\n        fireContext.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n        fireContext.clearRect(0, 0, fireCanvas.width, fireCanvas.height);\n\n        for(let i = 0; i < x.pelletArray.length; i++) {\n          let pelote = x.pelletArray[i];\n          let newAlpha = pelote.alpha - fade;\n          // let negPos = [-1, 1][Math.floor(Math.random()) * 2];\n\n          let p = Math.random();\n          let theta = (2 * Math.PI * p);\n\n\n          let changeX = magnitude * Math.cos(theta);\n          let changeY = magnitude * Math.sin(theta);\n          // let x = startX + this.fireworkInnerRadius * Math.cos(2 * Math.PI * p);\n          // let y = startY + this.fireworkInnerRadius * Math.sin(2 * Math.PI * p);\n\n          fireContext.beginPath();\n\n          fireContext.arc((pelote.x + changeX), (pelote.y + changeY), pelote.pelletRadius, 0, 2 * Math.PI, false);\n          // fireContext.arc((pelote.x + (counter * 3 * [-1, 1][Math.floor(Math.random()) * 2] * Math.random())), (pelote.y + (counter * 2 * [-1, 1][Math.floor(Math.random()) * 2] * Math.random())), pelote.pelletRadius, 0, 2 * Math.PI, false);\n\n          fireContext.fillStyle = `rgba(${pelote.red}, ${pelote.green}, ${pelote.blue}, ${newAlpha})`;\n          fireContext.fill();\n        }\n\n        magnitude += 1;\n        counter++;\n        if (fade < 1){\n          fade += (0.005);\n        }\n\n        if(counter === numIterations) {\n            clearInterval(z);\n        }\n    }, 20);\n\n  }\n\n}\n\n\nmodule.exports = Firework;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/firework.js","const Firework = require(\"./firework\");\n\nclass Display {\n  constructor(context, playButton) {\n    // this.canvas = canvas;\n    this.context = context;\n    this.context.globalCompositeOperation = 'source-over';\n\n    this.playButton = playButton;\n    this.fireworkArray = [];\n\n    this.addFirework = this.addFirework.bind(this);\n    this.fireThemAll = this.fireThemAll.bind(this);\n    this.resetFireworkArray = this.resetFireworkArray.bind(this);\n  }\n\n\n  listenToButton() {\n    this.playButton.addEventListener(\"click\", this.fireThemAll);\n  }\n\n  addFirework(firework) {\n    this.fireworkArray.push(firework);\n    console.log(this.fireworkArray);\n  }\n\n  fireThemAll() {\n    console.log(this.fireworkArray);\n\n    for (let i = 0; i < this.fireworkArray.length; i++) {\n      this.fireworkArray[i].initiate();\n    }\n\n  }\n\n  resetFireworkArray(context) {\n    console.log(this.fireworkArray);\n    this.fireworkArray = [];\n    console.log(this.fireworkArray);\n    this.context.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n  }\n\n}\n\nmodule.exports = Display;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/display.js","// const requestAnimFrame = require(\"./requestAnimFrame\");\nconst Demo = require(\"./demo\");\nconst Display = require(\"./display\");\nconst Firework = require(\"./firework\");\n// const Pellet = require(\"./pellet\");\nconst Record = require(\"./record\");\n\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n\n  //credit for requestAnimFrame: Paul Irish\n  // window.requestAnimFrame = (function(){\n  //   return  window.requestAnimationFrame       ||\n  //           window.webkitRequestAnimationFrame ||\n  //           window.mozRequestAnimationFrame    ||\n  //           window.oRequestAnimationFrame      ||\n  //           window.msRequestAnimationFrame     ||\n  //           function( callback ){\n  //             window.setTimeout(callback, 1000 / 60);\n  //           };\n  // })();\n\n\n  console.log(\"i'm on the entry file\");\n\n  let mainCanvas = document.getElementById(\"myCanvas\");\n  mainCanvas.width = document.documentElement.clientWidth;\n  mainCanvas.height = document.documentElement.clientHeight;\n  let mainContext = mainCanvas.getContext(\"2d\");\n  mainContext.clearRect(0, 0, mainCanvas.width, mainCanvas.height);\n\n  // let firework = new Firework(mainCanvas);\n  // firework.listen();\n\n  let playButton = document.getElementById(\"play-pause\");\n  let theDisplay = new Display(mainContext, playButton);\n  theDisplay.listenToButton();\n\n  let resetButton = document.getElementById(\"reset\");\n  resetButton.addEventListener(\"click\", theDisplay.resetFireworkArray);\n\n  let demoButton = document.getElementById(\"demo\");\n  let demo = new Demo(demoButton);\n  demo.listenToButton();\n\n\n  let button1 = document.getElementById(\"F1\");\n  let record1 = new Record(mainCanvas, mainContext, button1,[[255, 102, 1]], theDisplay);\n  record1.listenToButton();\n\n  let button2 = document.getElementById(\"F2\");\n  let record2 = new Record(mainCanvas, mainContext, button2,[[255, 255, 1]], theDisplay);\n  record2.listenToButton();\n\n  let button3 = document.getElementById(\"F3\");\n  let record3 = new Record(mainCanvas, mainContext, button3,[[1, 255, 1]], theDisplay);\n  record3.listenToButton();\n\n  let button4 = document.getElementById(\"F4\");\n  let record4 = new Record(mainCanvas, mainContext, button4,[[1, 102, 255]], theDisplay);\n  record4.listenToButton();\n\n  let button5 = document.getElementById(\"F5\");\n  let record5 = new Record(mainCanvas, mainContext, button5,[[255, 51, 153]], theDisplay);\n  record5.listenToButton();\n\n  let button6 = document.getElementById(\"F6\");\n  let record6 = new Record(mainCanvas, mainContext, button6, [[211, 211, 211], [255, 51, 153], [255, 255, 1]], theDisplay);\n  record6.listenToButton();\n\n\n\n  function updateCanvasContext() {\n    mainCanvas.width = document.documentElement.clientWidth;\n    mainCanvas.height = document.documentElement.clientHeight;\n  }\n\n  window.addEventListener(\"resize\", updateCanvasContext);\n\n\n\n\n\n  // let muteButton = document.getElementById('mute');\n  // muteButton.onclick = mutePage();\n\n  function mutePage() {\n    let audios = document.querySelectorAll(\"button\");\n    [].forEach.call(audios, function(audio) { muteMe(audio); });\n  }\n\n  function muteMe(elem) {\n    elem.muted = true;\n    elem.pause();\n  }\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/entry.js","const Firework = require(\"./firework\");\n\nclass Demo {\n  constructor(button) {\n    this.demoButton = button;\n    this.playDemo = this.playDemo.bind(this);\n  }\n\n  listenToButton() {\n    console.log(\"setting a listener on the demo button\");\n    this.demoButton.addEventListener(\"click\", this.playDemo);\n  }\n\n  playDemo() {\n    console.log(\"inside playDemo\");\n\n    let demoCanvas = document.getElementById(\"myCanvas\");\n    demoCanvas.width = document.documentElement.clientWidth;\n    demoCanvas.height = document.documentElement.clientHeight;\n    console.log(\"demo width:\", demoCanvas.width);\n    console.log(\"demo height:\", demoCanvas.height);\n\n    let demoContext = demoCanvas.getContext(\"2d\");\n    demoContext.globalCompositeOperation = 'source-over';\n    demoContext.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n\n\n    let firework1 = new Firework(null, (demoCanvas.width * 0.8), (demoCanvas.height * 0.4));\n    firework1.initiate();\n\n    let firework2 = new Firework([[255, 102, 1]], (demoCanvas.width * 0.5), (demoCanvas.height * 0.7));\n    firework2.initiate();\n\n    let firework3 = new Firework(null, (demoCanvas.width * 0.7), (demoCanvas.height * 0.2));\n    firework3.initiate();\n\n    let firework4 = new Firework([[1, 255, 1]], (demoCanvas.width * 0.4), (demoCanvas.height * 0.3));\n    firework4.initiate();\n\n    let firework5 = new Firework([[255, 102, 1]], (demoCanvas.width * 0.3), (demoCanvas.height * 0.8));\n    firework5.initiate();\n\n    let firework6 = new Firework([[255, 102, 1]], (demoCanvas.width * 0.6), (demoCanvas.height * 0.4));\n    firework6.initiate();\n\n    let firework7 = new Firework(null, (demoCanvas.width * 0.8), (demoCanvas.height * 0.8));\n    firework7.initiate();\n\n    demoContext.clearRect(0, 0, document.documentElement.clientWidth, document.documentElement.clientHeight);\n\n\n  }\n\n\n}\n\nmodule.exports = Demo;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/demo.js","const Matter = require(\"./matter\");\n\nclass Pellet {\n  constructor (x, y, radius, red, green, blue, alpha) {\n\n    this.x = x || null;\n    this.y = y || null;\n    this.pelletRadius = radius || null;\n    this.red = red || null;\n    this.green = green || null;\n    this.blue = blue || null;\n    this.alpha = alpha || null;\n\n    this.make = this.make.bind(this);\n\n  }\n\n  make(context) {\n    console.log(\"inside pellet's make method\");\n\n    context.globalCompositeOperation = 'source-over';\n    context.beginPath();\n    context.arc(this.x, this.y, this.pelletRadius, 0, 2 * Math.PI, false);\n    context.fillStyle = `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n    context.fill();\n    // console.log(\"inside make\", this.x);\n    // let stage = new createjs.Stage(\"myCanvas\");\n    // let pelote = new createjs.Shape();\n    // pelote.graphics.beginFill(this.color).drawCircle(0, 0, this.pelletRadius);\n    // pelote.x = this.x;\n    // pelote.y = this.y;\n    // stage.addChild(pelote);\n    // stage.update();\n\n    // createjs.Tween.get(pelote, { loop: false })\n    //   .to({ y: 400 }, 2000, createjs.Ease.getPowInOut(10))\n    //   .to({ alpha: 0, x: 175 }, 1000, createjs.Ease.getPowInOut(2))\n    //   .to({ alpha: 0, x: 225 }, 200)\n    //   .to({ alpha: 1, x: 200 }, 1000, createjs.Ease.getPowInOut(2))\n    //   .to({ y: 100 }, 800, createjs.Ease.getPowInOut(2));\n    //\n    // createjs.Ticker.setFPS(60);\n    // createjs.Ticker.addEventListener(\"tick\", stage);\n  }\n\n\n}\n\n\n\n// class Pellet {\n//\n//   constructor (ctx, posObject, targetObject, velObject, color, usePhysics) {\n//     // this.ctx = ctx;\n//     this.color = color;\n//\n//     this.gravity = 0.05;\n//     this.alpha = 1;\n//     this.easing = Math.random() * 0.05;\n//     this.fade = Math.random() * 0.2;\n//\n//\n//     this.pos = {\n//       x: posObject.x || 0,\n//       y: posObject.y || 0\n//     };\n//\n//     this.target = {\n//       x: this.targetObject.x || 0,\n//       y: this.targetObject.y || 0\n//     };\n//\n//     this.velocity = {\n//       x: this.velObject.x || 0,\n//       y: this.velObject.y || 0\n//     };\n//\n//     this.usePhysics = usePhysics || false;\n//\n//     this.clearScreen = this.clearScreen.bind(this);\n//   }\n//\n//   // to get full height/width:\n//   // document.documentElement.clientWidth\n//   // document.documentElement.clientHeight\n//   // ...these are built into window\n//\n//   clearScreen() {\n//     this.ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n//     this.ctx.fillRect(0, 0, 1000, 700);\n//   }\n//\n// }\n\nmodule.exports = Pellet;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/pellet.js","/**\n* matter-js 0.13.0 by @liabru 2017-07-06\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) Liam Brummitt and contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass and density are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass is automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body.\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = _totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, body.position);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n\n            if (!body.isStatic) {\n                part.area = Vertices.area(part.vertices);\n                Body.setMass(part, body.density * part.area);\n\n                // update inertia (requires vertices to be at origin)\n                Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n                Body.setInertia(part, Vertices.inertia(part.vertices, part.mass));\n                Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n            }\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle circles\n        if (body.circleRadius) {\n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n\n        if (!body.isStatic) {\n            var total = _totalProperties(body);\n            body.area = total.area;\n            Body.setMass(body, total.mass);\n            Body.setInertia(body, total.inertia);\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n\n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    var _totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            properties.mass += part.mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre,\n                                           Vector.mult(part.position, part.mass !== Infinity ? part.mass : 1));\n        }\n\n        properties.centre = Vector.div(properties.centre,\n                                       properties.mass !== Infinity ? properties.mass : body.parts.length);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body.\n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection.\n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only.\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur.\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear.\n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model).\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance).\n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear.\n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n\n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n\n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default\n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({\n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [],\n            constraints: [],\n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag.\n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n\n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) {\n            return object.id.toString() === id.toString();\n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions,\n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n\n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Matter.Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Matter.Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: {\n                min: { x: -Infinity, y: -Infinity },\n                max: { x: Infinity, y: Infinity }\n            }\n        };\n\n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.add\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n\n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n\n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n\n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0],\n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n\n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = _getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = _regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = _getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    _bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = _createBucket(buckets, bucketId);\n                            _bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = _createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    var _regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    var _getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\n        return {\n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol,\n            endCol: endCol,\n            startRow: startRow,\n            endRow: endRow\n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    var _getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    var _createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    var _createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n\n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n\n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n\n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    var _pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({\n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n\n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n\n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n\n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > _pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n\n            if (Bounds.overlaps(bodyA.bounds, ray.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, ray.bounds)) {\n                        var collision = SAT.collides(part, ray);\n                        if (collision.collided) {\n                            collision.body = collision.bodyA = collision.bodyB = bodyA;\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA),\n                                    Vector.add(bodyA.positionImpulse,\n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n\n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD),\n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n\n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA,\n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result\n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = _overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = _overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = _overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n\n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth;\n\n        // find support points, there is always either exactly one or two\n        var verticesB = _findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = _findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n\n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n\n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    var _overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0],\n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            _projectToAxis(projectionA, verticesA, axis);\n            _projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    var _projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) {\n                max = dot;\n            } else if (dot < min) {\n                min = dot;\n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n\n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    var _findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n\n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n\n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n\n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n\n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type.\n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint,\n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint.\n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({\n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01,\n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            _triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position)\n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    var _triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n\n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n\n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n\n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        return obj instanceof HTMLElement;\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n\n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n\n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n\n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n\n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.\n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                _topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    var _topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                _topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n})();\n\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n\n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        _bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        _bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        _bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n\n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n\n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n\n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    var _bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    var _bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method updateAll\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime\n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction\n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    var _bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine.\n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`.\n     * It is incremented on every `Engine.update` by the given `delta` argument.\n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.13.0';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n\n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n\n        mouse.mousemove = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n\n        mouse.mousedown = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n\n        mouse.mouseup = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n\n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n\n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    var _getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n\n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return {\n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists.\n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.\n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop,\n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){\n            _frameTimeout = setTimeout(function() {\n                callback(Common.now());\n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n\n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified\n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n\n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n\n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n\n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n\n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent,\n                bodyB = collision.bodyB.parent;\n\n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n\n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n\n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models\n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp = (typeof window !== \"undefined\" ? window['decomp'] : typeof global !== \"undefined\" ? global['decomp'] : null);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = {\n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a trapezoid hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n\n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = {\n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n\n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides.\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = {\n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius,\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n\n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n\n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x;\n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n\n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n\n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n\n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n\n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n\n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x,\n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n\n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n\n            var constraint = Common.extend(defaults, options);\n\n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n\n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n\n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n\n        return composite;\n    };\n\n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n\n            if (row > actualRows)\n                return;\n\n            // reverse row order\n            row = actualRows - row;\n\n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n\n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n\n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size,\n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n\n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n\n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, {\n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n\n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n\n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, {\n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n\n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n\n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n\n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length,\n                normal = Vector.normalise({\n                    x: vertices[j].y - vertices[i].y,\n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n\n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = {\n            min: { x: 0, y: 0 },\n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n\n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n\n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n\n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x\n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n\n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n\n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments,\n            segmentsQueue, lastSegment,\n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z')\n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        _svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    var _svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle in radians between the two vectors relative to the x-axis.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(),\n        Vector.create(), Vector.create(),\n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas),\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n\n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        radius = radius || [8];\n\n        if (!radius.length)\n            radius = [radius];\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({\n                x: vertex.y - prevVertex.y,\n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({\n                x: nextVertex.y - vertex.y,\n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [],\n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) {\n            container.removeChild(container.children[0]);\n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) {\n            spriteContainer.removeChild(spriteContainer.children[0]);\n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas\n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite);\n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n\n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n\n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x),\n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n\n\n\n// WEBPACK FOOTER //\n// ./lib/matter.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 6\n// module chunks = 0","const Firework = require(\"./firework\");\nconst Display = require(\"./display\");\n\nclass Record {\n  constructor (canvas, context, button, colorArray, display) {\n\n    this.recordCanvas = canvas;\n    // this.recordCanvas.width = document.documentElement.clientWidth;\n    this.recordCanvas.height = document.documentElement.clientHeight * 0.97;\n\n    this.recordContext = context;\n    this.recordContext.globalCompositeOperation = 'source-over';\n\n    this.theButton = button;\n    this.display = display;\n\n    this.colorArray = colorArray;\n    this.pointColor = `rgb(${colorArray[0][0]}, ${colorArray[0][1]}, ${colorArray[0][2]})`;\n\n    this.bangImage = new Image();\n    this.bangImage.src = \"./images/bang.png\";\n    this.bustImage = new Image();\n    this.bustImage.src = \"./images/bust.png\";\n\n    this.setCanvasListener = this.setCanvasListener.bind(this);\n    this.saveFirework = this.saveFirework.bind(this);\n  }\n\n  listenToButton() {\n    this.theButton.addEventListener(\"click\", this.setCanvasListener);\n  }\n\n  setCanvasListener() {\n    this.recordCanvas.addEventListener(\"click\", this.saveFirework, false);\n  }\n\n  saveFirework(event) {\n    this.recordCanvas.removeEventListener(\"click\", this.saveFirework, false);\n\n    let xPos = event.clientX;\n    let yPos = event.clientY;\n    console.log(xPos);\n    console.log(yPos);\n\n    let adjustment = 0;\n\n    this.recordContext.beginPath();\n    this.recordContext.arc((xPos - adjustment), (yPos + adjustment), 10, 0, 2 * Math.PI, false);\n    this.recordContext.fillStyle = this.pointColor;\n    this.recordContext.fill();\n\n    this.recordContext.drawImage(this.bustImage, (xPos - adjustment - 10), (yPos + adjustment - 10), 20, 20);\n\n    let firework = new Firework(this.colorArray, xPos, yPos);\n    this.display.addFirework(firework);\n\n  }\n\n\n}\n\nmodule.exports = Record;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/record.js"],"sourceRoot":""}